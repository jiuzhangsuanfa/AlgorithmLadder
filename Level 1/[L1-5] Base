# 进制(Base)

## 1、什么是进制？

常见的进制有：

a. **二进制 :** 由0，1组成。

b. **八进制 :** 由0，1，…，7组成。

c. **十进制 :** 由0，1，…，9组成，整数默认为十进制。

d. **十六进制 :** 由0，1，…，9，a，b，c，d，e，f组成（大小写均可）。



## 2、进制码

在计算机内，有符号数有3种表示法：原码、反码和补码。所有数据的运算都是采用补码进行的。    

**原码**

就是二进制定点表示法，即最高位为符号位，“0”表示正，“1”表示负，其余位表示数值的大小。

```
例如： [+1] 原 = 0000 0001

      [-1] 原 = 1000 0001
```

因为第一位是符号位，所以8位二进制数的取值范围就是:

[1111 1111 , 0111 1111]  即  [-127 , 127]。

**反码**

正数的反码与其原码相同；负数的反码是对其原码逐位取反，但符号位除外。

```
[+1] 原 = [00000001]  反 = [00000001]
[-1] 原 = [10000001]  反 = [11111110]
```

**补码**

正数的补码与其原码相同；负数的补码是在其反码的末位加1。

```
[+1] 原 = [00000001]  反 = [00000001]  补 = [00000001]
[-1] 原 = [10000001]  反 = [11111110]  补 = [11111111]
```



## 3、二进制常用的运算符

#### 1、左移运算符

**通用格式：** value << num。 注：num 指定要移位值； value 移动的位数。

**左移的规则：**丢弃最高位，0补最低位。例：当左移的运算数是 int 类型时，每移动1位它的第31位就要被移出并丢弃； 当左移的运算数是 long 类型时，每移动1位它的第63位就要被移出并且丢弃。

**数学意义：**在数字没有溢出的前提下，对于正数和负数，左移一位都相当于乘以2的1次方，左移n位就相当于乘以2的n次方。

**计算过程：**例如：3 << 2 (3为 int 型)

1）把 3 转换为二进制：0000 0000 0000 0000 0000 0000 0000 0011。

2）把该数字高位(左侧)的两个零移出，其他的数字都朝左平移2位。

3）在低位(右侧)的两个空位补零。则得到的最终结果是0000 0000 0000 0000 0000 0000 0000 1100，
转换为十进制是12。

```java
public class Main {
    public static void main(String[] args) {
        int a = 3;                   // 0011
        int b = a << 2;              // 1100
        System.out.println(b);       // 输出左移运算结果
    }
}
// output :
// 12
```

```python
if __name__ == '__main__':
    a = 3       # 0011
    b = a << 2  # 1100
    print(b)    # 输出左移运算结果
# output :
# 12
```



#### 2、右移运算符

**通用格式：** value >> num。 注：num 指定要移位值； value 移动的位数。

**右移的规则：**符号位不变，左边补上符号位。例：如果要移走的值为负数，每一次右移都在左边补1，如果要移走的值为正数，每一次右移都在左边补0。

**数学意义：**右移一位相当于除2，右移n位相当于除以2的n次方。

**计算过程：**11 >> 2 (11为 int 型)

1）把 11 转换为二进制：0000 0000 0000 0000 0000 0000 0000 1011

2）把低位的最后两个数字移出，因为该数字是正数，所以在高位补零。

3）最终结果是 0000 0000 0000 0000 0000 0000 0000 0010， 转换为十进制是3。

```java
public class Main {
    public static void main(String[] args) {
        int a = 11;                   // 1011
        int b = a >> 2;               // 0010
        System.out.println(b);        // 输出右移运算结果
    }
}
// output :
// 2
```

```python
if __name__ == '__main__':
    a = 11       # 1011
    b = a >> 2   # 0010
    print(b)     # 输出右移运算结果
# output :
# 2
```



#### 3、^异或运算符

相同为0，不同为1。

```java
public class Main {
    public static void main(String[] args) {
        int a = 3;                   // 0011
        int b = 4;                   // 0100
        int c = b ^ a;               // 0111
        System.out.println(c);       // 输出异或结果
    }
}
// output :
// 7
```

```python
if __name__ == '__main__':
    a = 3       # 0011
    b = 4       # 0100
    c = a ^ b   # 0111
    print(c)    # 输出异或结果
# output :
# 7
```



#### 4、**&与运算符**

全1为1，否则为0。

```java
public class Main {
    public static void main(String[] args) {
        int a = 3;                   // 0011
        int b = 4;                   // 0100
        int c = b & a;               // 0000
        System.out.println(c);       // 输出与运算结果
    }
}
// output :
// 0
```

```python
if __name__ == '__main__':
    a = 3       # 0011
    b = 4       # 0100
    c = a & b   # 0000
    print(c)    # 输出与运算结果
# output :
# 0
```



#### 5、**|或运算符**

任意一个为1出1，否则为0。

```java
public class Main {
    public static void main(String[] args) {
        int a = 3;                   // 0011
        int b = 4;                   // 0100
        int c = b | a;               // 0111
        System.out.println(c);       // 输出或运算结果
    }
}
// output :
// 7
```

```python
if __name__ == '__main__':
    a = 3       # 0011
    b = 4       # 0100
    c = a | b   # 0000
    print(c)    # 输出或运算结果
# output :
# 7
```



## 4、进制转换



#### Java里的进制转换方法

1、十进制转成十六进制、八进制、三进制和二进制。

```java
public class Main {
    public static void main(String[] args) {
        int n = 18;
        Integer.toHexString(n);
        System.out.println(n + "的十六进制是:" + Integer.toHexString(n));
        System.out.println(n + "的八进制是:" + Integer.toOctalString(n));
        System.out.println(n + "的三进制是:" + Integer.toString(n, 3));
        System.out.println(n + "的二进制是:" + Integer.toBinaryString(n));
    }
}
// output :
// 18的十六进制是:12
// 18的八进制是:22
// 18的三进制是:200
// 18的二进制是:10010
```

2、 r 进制转成十进制 (以二进制为例)

```java
public class Main {
    public static void main(String[] args) {
        String n = "10101";                         // 21
        System.out.println(Integer.parseInt(n,2));
    }
}
// output :
// 21
```



**Java里的进制转换方法汇总：**

|        描述        |           转换函数            |
| :----------------: | :---------------------------: |
| 十进制转成十六进制 |  Integer.toHexString(int n)   |
|  十进制转成八进制  | Integer.toOctalString(int n)  |
|  十进制转成三进制  |    Integer.toString(n, 3)     |
|  十进制转成二进制  | Integer.toBinaryString(int n) |
| 十进制转成 r 进制  |    Integer.toString(n, r)     |
|  r 进制转成十进制  |    Integer.parseInt(n, r)     |



#### Python里的进制转换方法。

1、十进制转成十六进制、八进制、三进制和二进制。

```python
if __name__ == '__main__':
    a = 18         # 声明数字，默认十进制
    print(hex(a))  # 转为十六进制
    print(oct(a))  # 转为八进制
    print(bin(a))  # 转为二进制
# output :
# 0x12
# 0o22
# 0b10010
```

2、r 进制转成十进制 (以二进制为例)

```python
if __name__ == '__main__':
    a = '10101'
    print(int(a, base=2))
# output :
# 21
```



**Python里的进制转换方法汇总：**

|        描述        |     转换函数     |
| :----------------: | :--------------: |
| 十进制转成十六进制 |      hex(n)      |
|  十进制转成八进制  |      oct(n)      |
|  十进制转成二进制  |      bin(a)      |
|  r 进制转成十进制  | int(a, base = r) |

